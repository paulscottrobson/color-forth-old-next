TODO:

- Instantiate initial dictionary from image contents

- Find routines for words

- Write compiler code  

- Write basic support code for debugging, displaying on bottom ?

- Check page cross-calls.

Words
-----

Core : less < >= <= > = <> min max

Structure : if -if then for i next -next begin until -until end ; (with ;work)

System :boot warm c mark empty remember here h , c, dump buffer (+size) debug e forth macro

Console :cr br +at . 2emit at black blue cf color curs emit green h. red screen space top white xy

Compilation: load thru exit copy

		<set new page to A>
		ex 		af,af' 			; update A' with new page, A is now the old page.
		pop 	bc 				; pop return address
		ld 		(hl),c 			; push it on HL stack.
		inc 	hl
		ld 		(hl),b
		inc 	hl
		ld 		(hl),a 			; push new page on HL stack
		inc 	hl
		exx 					; put HL back, get target address in HL.		
		push 	<returnaddr>
		jp 		(hl) 			

<returnaddr>:
		exx 					; point to HL stack
		dec 	hl
		ld 		a,(hl) 			; get old page to restore
		<set page to A>
		ex 		af,af' 			; update A' with the current page.
		inc 	hl
		ld 		b,(hl) 			; get return address
		inc 	hl
		ld 		c,(hl)
		push 	bc 				; get ready to return there
		exx 					; switch back 
		ret