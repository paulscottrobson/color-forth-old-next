; ***************************************************************************************
; ***************************************************************************************
;
;		Name : 		binary.words
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		15th November 2018
;		Purpose :	Binary operators
;
; ***************************************************************************************
; ***************************************************************************************

; @word.ix 		*
		pop 	hl
		call 	MULTMultiply16 							; HL := HL * DE
		ex 		de,hl
; @end	

; *********************************************************************************

; @word.ix 		/
		pop 	hl
		call 	DIVDivideMod16							; DE := DE/HL HL = DE%HL
; @end	

; *********************************************************************************

; @word.ix 		mod
		pop 	hl
		call 	DIVDivideMod16							; DE := DE/HL HL = DE%HL
		ex 		de,hl
; @end	

; *********************************************************************************

; @word.ix 		/mod
		pop 	hl
		call 	DIVDivideMod16							; DE := DE/HL HL = DE%HL
		push 	hl
; @end	

; *********************************************************************************

; @generator.ix	+
		pop 	hl
		add 	hl,de
		ex 		de,hl
; @end

; *********************************************************************************

; @word.hl		and
		pop 	bc
		ld 		a,e
		and 	c
		ld 		e,a
		ld 		a,d
		and 	b
		ld 		d,a
; @end

; *********************************************************************************

; @word.hl		or
		pop 	bc
		ld 		a,e
		xor 	c
		ld 		e,a
		ld 		a,d
		xor 	b
		ld 		d,a
; @end

; *********************************************************************************

; @word.hl		+or
		pop 	bc
		ld 		a,e
		or 		c
		ld 		e,a
		ld 		a,d
		or 		b
		ld 		d,a
; @end

